openapi: 3.0.0
info:
  title: Permission API
  description: Permission management API endpoints
  version: 1.0.0

paths:
  /permissions:
    post:
      summary: Create a new permission
      description: Create a new permission in the system
      tags:
        - Permissions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionInput'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '400':
          description: Bad request - Permission name already exists
        '401':
          description: Unauthorized
    get:
      summary: Get all permissions with pagination
      description: Get a list of all permissions with pagination and filtering
      tags:
        - Permissions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by permission name
        - in: query
          name: action
          schema:
            type: string
          description: Filter by action
          example: 'read'
        - in: query
          name: resource
          schema:
            type: string
          description: Filter by resource
          example: 'users'
        - in: query
          name: category
          schema:
            type: string
          description: Filter by category
          example: '用户模块'
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filter by active status
        - in: query
          name: sortBy
          schema:
            type: string
          description: 'Sort by field in format: field:(desc|asc)'
          example: 'name:asc'
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of permissions per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        '200':
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permission'
                  page:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  totalResults:
                    type: integer
        '401':
          description: Unauthorized

  /permissions/all:
    get:
      summary: Get all permissions for selection
      description: Get all active permissions in simple format for dropdown/select components
      tags:
        - Permissions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionSimple'
        '401':
          description: Unauthorized

  /permissions/{permissionId}:
    get:
      summary: Get permission by ID
      description: Get a specific permission by its ID
      tags:
        - Permissions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
          description: Permission ID
      responses:
        '200':
          description: Permission retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '404':
          description: Permission not found
        '401':
          description: Unauthorized
    patch:
      summary: Update permission
      description: Update permission information
      tags:
        - Permissions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
          description: Permission ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdate'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '400':
          description: Bad request - Permission name already exists
        '401':
          description: Unauthorized
        '404':
          description: Permission not found
    delete:
      summary: Delete permission
      description: Delete a permission by ID
      tags:
        - Permissions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
          description: Permission ID
      responses:
        '204':
          description: Permission deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Permission not found

components:
  schemas:
    Permission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique permission identifier
        name:
          type: string
          maxLength: 100
          description: Permission name
          example: '用户管理'
        action:
          type: string
          maxLength: 100
          description: Permission action
          example: 'manage'
          enum: ['read', 'create', 'update', 'delete', 'manage']
        resource:
          type: string
          maxLength: 100
          description: Permission resource
          example: 'users'
        description:
          type: string
          maxLength: 200
          description: Permission description
          example: '管理用户的权限'
        category:
          type: string
          maxLength: 50
          description: Permission category
          example: '用户模块'
        isActive:
          type: boolean
          description: Whether the permission is active
        createdAt:
          type: string
          format: date-time
          description: Permission creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Permission last update timestamp

    PermissionSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique permission identifier
        name:
          type: string
          description: Permission name
          example: '用户管理'
        action:
          type: string
          description: Permission action
          example: 'manage'
        resource:
          type: string
          description: Permission resource
          example: 'users'
        category:
          type: string
          description: Permission category
          example: '用户模块'

    PermissionInput:
      type: object
      required:
        - name
        - action
        - resource
      properties:
        name:
          type: string
          maxLength: 100
          description: Permission name
          example: '用户管理'
        action:
          type: string
          maxLength: 100
          description: Permission action
          example: 'manage'
          enum: ['read', 'create', 'update', 'delete', 'manage']
        resource:
          type: string
          maxLength: 100
          description: Permission resource
          example: 'users'
        description:
          type: string
          maxLength: 200
          description: Permission description
          example: '管理用户的权限'
        category:
          type: string
          maxLength: 50
          description: Permission category
          example: '用户模块'
        isActive:
          type: boolean
          description: Whether the permission is active
          default: true

    PermissionUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          description: Permission name
          example: '用户管理'
        action:
          type: string
          maxLength: 100
          description: Permission action
          example: 'manage'
          enum: ['read', 'create', 'update', 'delete', 'manage']
        resource:
          type: string
          maxLength: 100
          description: Permission resource
          example: 'users'
        description:
          type: string
          maxLength: 200
          description: Permission description
          example: '管理用户的权限'
        category:
          type: string
          maxLength: 50
          description: Permission category
          example: '用户模块'
        isActive:
          type: boolean
          description: Whether the permission is active
